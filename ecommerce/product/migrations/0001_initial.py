# Generated by Django 4.0.1 on 2022-02-16 16:53

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('gallery', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('showindexpage', models.BooleanField(default=0)),
                ('descriptions', models.TextField(max_length=450)),
                ('keywords', models.CharField(max_length=150)),
                ('tags', models.CharField(max_length=150)),
                ('image', models.ForeignKey(default=76, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='gallery.images')),
            ],
        ),
        migrations.CreateModel(
            name='color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('color', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='details',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='maincategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('descriptions', models.TextField(max_length=450)),
                ('keywords', models.CharField(max_length=150)),
                ('tags', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='menu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('link', models.CharField(blank=True, max_length=150, null=True)),
                ('index', models.IntegerField(default=1)),
            ],
            options={
                'ordering': ['index'],
            },
        ),
        migrations.CreateModel(
            name='product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
                ('engname', models.CharField(max_length=150, unique=True)),
                ('weight', models.CharField(blank=True, max_length=150, null=True)),
                ('dimensions', models.CharField(blank=True, max_length=150, null=True)),
                ('allowcomment', models.BooleanField(default=0)),
                ('visibility', models.BooleanField(default=0)),
                ('status', models.IntegerField(choices=[(1, 'در حال فروش'), (2, 'توقف فروش'), (3, 'اتمام موجودی'), (4, 'توقف تولید'), (5, 'به زودی موجود می شود')])),
                ('meta_title', models.CharField(max_length=150)),
                ('meta_keywords', models.CharField(max_length=150)),
                ('descriptions', tinymce.models.HTMLField()),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('countview', models.IntegerField(default=0)),
                ('brand', models.ForeignKey(default=1, on_delete=django.db.models.deletion.SET_DEFAULT, to='product.brand')),
            ],
            options={
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('showindexpage', models.BooleanField(default=0)),
                ('descriptions', models.TextField(max_length=450)),
                ('keywords', models.CharField(max_length=150)),
                ('tags', models.CharField(max_length=150)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.maincategory')),
                ('image', models.ForeignKey(default=76, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='gallery.images')),
            ],
        ),
        migrations.CreateModel(
            name='treemenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
                ('tree', models.BooleanField(default=0)),
                ('link', models.CharField(blank=True, max_length=150, null=True)),
                ('index', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='warranty',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Variable_price',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
                ('min', models.IntegerField(blank=True, null=True)),
                ('max', models.IntegerField()),
                ('count', models.IntegerField()),
                ('colleague', models.BooleanField(blank=True, default=0, null=True)),
                ('price_colleague', models.FloatField(blank=True, null=True)),
                ('min_colleague', models.IntegerField(blank=True, null=True)),
                ('max_colleague', models.IntegerField(blank=True, null=True)),
                ('count_colleague', models.IntegerField(blank=True, null=True)),
                ('discount', models.BooleanField(blank=True, default=0, null=True)),
                ('price_discount', models.IntegerField(blank=True, null=True)),
                ('timestart', models.DateTimeField(blank=True, null=True)),
                ('timeend', models.DateTimeField(blank=True, null=True)),
                ('color', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.color')),
                ('details', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='product.variable')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
        ),
        migrations.CreateModel(
            name='valuedetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=250)),
                ('namedetails', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.details')),
            ],
            options={
                'ordering': ['namedetails'],
            },
        ),
        migrations.CreateModel(
            name='submenu',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.subcategory')),
                ('selectmenu', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.menu')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='category',
            field=models.ManyToManyField(to='product.subcategory'),
        ),
        migrations.AddField(
            model_name='product',
            name='details',
            field=models.ManyToManyField(to='product.valuedetails'),
        ),
        migrations.AddField(
            model_name='product',
            name='image',
            field=models.ForeignKey(default=76, on_delete=django.db.models.deletion.SET_DEFAULT, related_name='product', to='gallery.images'),
        ),
        migrations.AddField(
            model_name='product',
            name='imageother',
            field=models.ManyToManyField(related_name='imageother', to='gallery.images'),
        ),
        migrations.AddField(
            model_name='product',
            name='warranty',
            field=models.ForeignKey(blank=True, default=76, null=True, on_delete=django.db.models.deletion.SET_DEFAULT, to='product.warranty'),
        ),
        migrations.AddField(
            model_name='menu',
            name='tree',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.treemenu'),
        ),
        migrations.CreateModel(
            name='comment_product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150)),
                ('starts', models.IntegerField()),
                ('text', models.TextField(max_length=500)),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.product')),
            ],
        ),
    ]
